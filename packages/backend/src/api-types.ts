/* Generated by restful-react */

/**
 * A user
 */
export interface User {
  /**
   * The name of the user
   */
  name: string;
}

/**
 * An error
 */
export interface Error {
  /**
   * A unique identifier for this particular occurrence of the problem
   */
  id: string;
  /**
   * An application-specific error code
   */
  code?: string;
  /**
   * A human-readable explanation of the problem
   */
  detail?: string;
  /**
   * The HTTP status code applicable to the problem
   */
  status?: number;
  /**
   * An object containing additional information about the problem
   */
  meta?: { [key: string]: any };
}

/**
 * A link stored in the-index
 */
export interface Link {
  /**
   * The ID of the link
   */
  id: string;
  /**
   * The URL of the link
   */
  url: string;
  /**
   * List of tags associated with the link
   */
  tags: string[];
  /**
   * The date the link was added
   */
  created?: string;
  user: User;
}

/**
 * Information relating to the pagination of the response
 */
export interface Pagination {
  /**
   * The maximum number of items returned in the query
   */
  limit: number;
  /**
   * The number of items that have been previously
   */
  offset: number;
  /**
   * The total number of items that could be retrieved
   */
  total: number;
  /**
   * The current page number
   */
  page: number;
}

/**
 * Response for when problems occur in the application
 */
export interface ErrorResponseResponse {
  /**
   * List of errors
   */
  errors: Error[];
}

export interface PostV2AuthResponse {
  user: User;
}

export interface PostV2AuthRequestBody {
  /**
   * The name of the user
   */
  name: string;
  /**
   * The TOTP code entered by the user
   */
  code?: string;
}

export interface DeleteV2AuthResponse {
  [key: string]: any;
}

export interface GetV2LinksResponse {
  /**
   * The list of links
   */
  links: Link[];
  pagination: Pagination;
}

export interface GetV2LinksQueryParams {
  /**
   * List of tags to include
   */
  tags?: string[];
  /**
   * The upper bound for the time a link was added
   */
  before?: string;
  /**
   * The lower bound for the time a link was added
   */
  after?: string;
  /**
   * The maximum number of links to return
   */
  limit?: number;
  /**
   * The number of links to skip when returning
   */
  offset?: number;
}

export interface PostV2LinksResponse {
  link: Link;
}

export interface PostV2LinksRequestBody {
  /**
   * The link to be added
   */
  url: string;
  /**
   * List of tags to add to the link
   */
  tags: string[];
}

export interface GetV2LinkIdResponse {
  link: Link;
}

export interface GetV2LinkIdPathParams {
  /**
   * The ID of the link
   */
  id: string;
}

export interface GetV2TagsResponse {
  /**
   * The list of tags
   */
  tags: string[];
}

export interface GetV2TagsQueryParams {
  /**
   * List of tags to exclude
   */
  exclude?: string[];
}

export interface GetV2UserIdResponse {
  user: User;
}

export interface GetV2UserIdPathParams {
  /**
   * The name of the user, or the special string `me`
   */
  name: string;
}
