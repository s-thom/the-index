{
  "root": true,
  "parserOptions": {
    "project": ["./tsconfig.json", "./packages/*/tsconfig.json"]
  },
  "extends": [
    "airbnb-typescript/base",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint",
    "plugin:jest/recommended",
    "plugin:jest/style"
  ],
  "rules": {
    "class-methods-use-this": "off",
    "no-plusplus": "off",
    "prettier/prettier": "warn",
    "no-unreachable": "error",

    "import/extensions": ["warn", "never"],
    // A copy of Airbnb's no-restricted-syntax rule, but with `for-of` loops excluded.
    // The reasoning for this is that Typescript compiles the for-of syntax back into a normal indexed for loop.
    // Since Typescript's compilation happens before Babel's, regenerator-runtime is not included.
    // https://github.com/airbnb/javascript/blob/63098cbb6c05376dbefc9a91351f5727540c1ce1/packages/eslint-config-airbnb-base/rules/style.js#L339
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ]
  }
}
